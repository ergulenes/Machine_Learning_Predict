#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Thu Mar 15 04:18:20 2018@author: sadievrenseker"""#1. kutuphanelerimport numpy as npimport matplotlib.pyplot as pltimport pandas as pd#2. Veri Onisleme#2.1. Veri Yuklemehw = pd.read_csv('hw.csv')#veri on isleme#encoder:  Kategorik -> Numericfrom sklearn.preprocessing import LabelEncoderdatas = hw.apply(LabelEncoder().fit_transform)                  print(datas)b = datas.iloc[:,:1]from sklearn.preprocessing import OneHotEncoderohe = OneHotEncoder()b=ohe.fit_transform(b).toarray()print(b)outlook = pd.DataFrame(data = b, index = range(14), columns=['overcast','rainy','sunny'])print(hw.iloc[:,-2:-1])print(hw)lastdata = pd.concat([outlook,hw.iloc[:,1:3]],axis = 1)print("lastdata = pd.concat([outlook,hw.iloc[:,2:3]],axis = 1)")print(lastdata)lastdata = pd.concat([lastdata,datas.iloc[:,-2:]], axis = 1)print(lastdata)print("lastdata = pd.concat([lastdata,datas.iloc[:,-2:]], axis = 1)")s = pd.concat([lastdata])#verilerin egitim ve test icin bolunmesifrom sklearn.model_selection import train_test_splitx_edu, x_tt,y_edu,y_tt = train_test_split(lastdata.iloc[:,:-1],lastdata.iloc[:,-1:],test_size=0.33, random_state=0)from sklearn.linear_model import LinearRegressionabc = LinearRegression()abc.fit(x_edu,y_edu)y_est = abc.predict(x_tt)print(y_est)#sıralamax_edu = x_edu.sort_index()y_edu = y_edu.sort_index()#Grafikleştirmeplt.plot(x_edu, y_edu)plt.plot(x_tt, y_est)"""import statsmodels.formula.api as sm X = np.append(arr = np.ones((14,1)).astype(int), values=sonveriler.iloc[:,:-1], axis=1 )X_l = sonveriler.iloc[:,[0,1,2,3,4,5]].valuesr_ols = sm.OLS(endog = sonveriler.iloc[:,-1:], exog =X_l)r = r_ols.fit()print(r.summary())sonveriler = sonveriler.iloc[:,1:]import statsmodels.formula.api as sm X = np.append(arr = np.ones((14,1)).astype(int), values=sonveriler.iloc[:,:-1], axis=1 )X_l = sonveriler.iloc[:,[0,1,2,3,4]].valuesr_ols = sm.OLS(endog = sonveriler.iloc[:,-1:], exog =X_l)r = r_ols.fit()print(r.summary())x_train = x_train.iloc[:,1:]x_test = x_test.iloc[:,1:]regressor.fit(x_train,y_train)y_pred = regressor.predict(x_test)"""